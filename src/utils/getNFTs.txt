/* 
    import { Metaplex, keypairIdentity } from "@metaplex-foundation/js";
    import { Connection } from "@solana/web3.js";

    const getNFTs = async () => {
    if ($walletStore$?.connected) {
    const connection = new Connection(network);
    const wallet = $walletStore$;
    const identity = keypairIdentity(wallet.publicKey);
    const metaplex = new Metaplex( connection, wallet, identity);
    const myNfts = await metaplex.nfts().findAllByOwner({
    owner: wallet.publicKey,
     }); 
    const nfts = await Promise.all(
    myNfts.map(async (nft) => {
    const response = await fetch(nft.uri);
    const metadata = await response.json();
    if (metadata.animation_url && metadata.name == "Whack A Minion") {
      return {
        nft,
        metadata, 
      };
      
    } else {
      return null;
      
    }
  })
).then((nfts) => nfts.filter((nft) => nft !== null));
console.log(nfts[0].metadata.animation_url);
for (let i = 0; i < nfts.length; i++) {
  console.log(nfts[i].metadata.animation_url);
}
}
else {
console.log("wallet not connected");
    
} }
onMount(async () => {
    getNFTs();
});*/